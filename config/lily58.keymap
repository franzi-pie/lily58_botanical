/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF		0
#define UML		1
#define NUM		2
#define BTST	3

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  		|  1  |  2  |  3   |  4   |  5   |                   |  6    |  7    |  8    |  9   |   0   |Print Screen|
// |  TAB  		|  Q  |  W  |  E   |  R   |  T   |                   |  Z    |  U    |  I    |  O   |   P   |Back Space  |
// | L1/Paste	|  A  |  S  |  D   |  F   |  G   |                   |  H    |  J    |  K    |  L   |   ;   |Shift/Enter	|
// |SHIFT//		|  Y  |  X  |  C   |  V   |  B   |L1 Copy |  |L1 Copy|  N    |  M    |  ,    |  .   |   /   | Ctrl/) 	|
//                   |Ctrl/undo| GUI  | Alt/COPY |  SPACE |  | SPACE |Alt/FIN| TG2  	| '   	|
			bindings = <
&kp ESC   		&kp N1 &kp N2 			&kp N3   &kp N4   			&kp N5                     					&kp N6 		&kp N7   		&kp N8    	&kp N9  &kp N0   &kp PSCRN
&kp TAB   		&kp Q  &kp W  			&kp E    &kp R    			&kp T                      					&kp Z  		&kp U   		&kp I     	&kp O   &kp P    &kp BSPC
&lt UML LC(V)   &kp A  &kp S  			&kp D    &kp F    			&mt LC(LS(G)) G                      		&kp H  		&kp J    		&kp K     	&kp L   &kp SEMI &mt RSHFT ENTER
&mt LSHFT LPAR 	&kp Y  &kp X  			&kp C    &kp V    			&kp B  		&lt UML LC(C)   &lt UML LC(C)   &kp N  		&kp M    		&kp COMMA 	&kp DOT &kp FSLH &mt RCTRL RPAR
                       &mt LCTRL K_UNDO &kp LGUI &mt LALT LC(C)  	&kp SPACE  									&kp SPACE  	&mt RALT F5	&tog NUM 	&kp SQT
			>;

		};

		Umlaut_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  !  |  "  |   ^  |   $  |   %  |                   |   &  |   /   |   \   |  "[" |  "]"  |    ?  |
// |       |  @  |     | EURO |      |      |                   |      |  ue   |       |  oe  |       |  del  |
// |       |  ae |  ss |      |      |      |                   |   +  |   -   |   *   |   /  |   =   |       |
// | Shift |     |     |      |      |      |        |  |       |      |       |       |      |       | Shift |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans	 	&kp EXCL     	&kp DQT     &kp CARET   &kp DOLLAR	&kp PRCNT                  &kp AMPS &kp FSLH    &kp NON_US_BSLH  &kp LBKT    &kp RBKT  &kp QMARK
&trans     	&kp AT          &trans      &kp RA(5)   &trans      &trans                     &trans   &kp RA(U)   &trans           &kp RA(O)   &trans    &kp DEL
&trans  	&kp RA(A)       &kp RA(S)   &trans      &trans   	&trans                     &kp PLUS &kp MINUS   &kp STAR	     &kp FSLH  	 &kp EQUAL &trans
&kp LSHFT  	&trans 			&trans 		&trans 		&trans      &trans    &trans   &trans  &trans   &trans      &trans     		 &trans  	 &trans    &kp RSHFT
										&trans      &trans      &trans    &trans   &trans  &trans   &trans      &trans
			>;

		};

		NavAndNum_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |       |   /   |  *   |   -   |       |
// | BTST  |     |     |  UP  |      |      |                   |      |   7   |   8   |  9   |   +   |  DEL  |
// | PASTE |     |LEFT | DOWN |RIGHT |      |                   |      |   4   |   5   |  6   |   =   |       |
// |       |     |     |      |      |      |  COPY  |  |       |      |   1   |   2   |  3   | ENTER |       |
//                     |      |      |      |        |  |       |  0   |DEFAULT|   ,   |
			bindings = <
&trans  	&kp F1 &kp F2 	&kp F3 	 &kp F4   	&kp F5                       	&kp F6  &trans   &kp FSLH &kp STAR   &kp MINUS  &trans
&to BTST  	&trans &trans 	&kp UP   &trans  	&trans                       	&trans  &kp N7   &kp N8   &kp N9     &kp PLUS   &kp DEL
&kp LC(V)   &trans &kp LEFT &kp DOWN &kp RIGHT  &trans                      	&trans  &kp N4   &kp N5   &kp N6   	 &kp EQUAL  &trans
&trans   	&trans &trans 	&trans   &trans 	&trans   &kp LC(C)   	&trans  &trans  &kp N1   &kp N2   &kp N3   	 &kp ENTER  &trans
							&trans   &trans  	&trans   &trans   		&trans  &kp N0  &tog DEF &kp KP_COMMA
			>;

		};
		
	Bluetooth_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |DEFAULT|  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans          &trans    &trans    &trans
&to DEF   &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
                                              &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
			>;

		
		};
	
	};
};
